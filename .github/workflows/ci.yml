name: Full CI/CD for Security Shepherd

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-and-run:
    name: Build and Start Security Shepherd
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.7/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Generate .env
        run: |
          cat <<EOF > .env
          DB_USER=shepherd
          DB_PASS=password
          CONTAINER_MARIADB=db
          CONTAINER_TOMCAT=web
          CONTAINER_MONGO=mongo
          IMAGE_TOMCAT=shepherd-tomcat
          IMAGE_MARIADB=shepherd-mariadb
          IMAGE_MONGO=shepherd-mongo
          DB_PORT_MAPPED_HOST=3306
          DB_SERVER_MAPPED_HOST=127.0.0.1
          MONGO_PORT_MAPPED_HOST=27017
          MONGO_SERVER_MAPPED_HOST=127.0.0.1
          DB_VERSION=10.5
          DB_BIND_ADDRESS=0.0.0.0
          MONGODB_VERSION=6
          MONGO_BIND_ADDRESS=0.0.0.0
          TOMCAT_DOCKER_VERSION=9.0-jdk17
          TLS_KEYSTORE_FILE=keystore.jks
          TLS_KEYSTORE_PASS=secret
          ALIAS=shepherd
          HTTPS_PORT=8443
          HTTP_PORT=8080
          DOCKER_NETWORK_NAME=shepherd-network
          EOF

      - name: Build and run containers
        run: docker-compose up --build -d

      - name: Save Docker image
        run: docker save shepherd-tomcat > image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: shepherd-image
          path: image.tar

  sast:
    name: Static code analysis (Semgrep)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: returntocorp/semgrep-action@v1
        with:
          config: p/java

sca:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v3

    - name: Run OWASP Dependency-Check
      uses: owasp-dep-check/gh-action@v1
      with:
        project: "SecurityShepherd"
        scan: "."
        format: "ALL"

  secrets:
    name: Secrets scan (Gitleaks)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gitleaks/gitleaks-action@v2

  trivy:
    name: Container scan (Trivy)
    runs-on: ubuntu-latest
    needs: build-and-run
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: shepherd-image
          path: .

      - name: Load image
        run: docker load -i image.tar

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: shepherd-tomcat
          format: table
          exit-code: 0

  dast:
    name: Dynamic scan (OWASP ZAP)
    runs-on: ubuntu-latest
    needs: build-and-run
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: shepherd-image
          path: .

      - name: Load and run image
        run: |
          docker load -i image.tar
          docker run -d -p 8080:8080 --name shepherd shepherd-tomcat
          sleep 20

      - name: Run ZAP Baseline
        uses: zaproxy/action-baseline@v0.12.0
        with:
          target: http://localhost:8080

